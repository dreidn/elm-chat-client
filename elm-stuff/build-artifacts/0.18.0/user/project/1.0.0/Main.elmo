var _user$project$Main$chatInputStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'height', _1: '150px'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'width', _1: '100%'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'border-radius', _1: '5px'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'background-color', _1: '#fff'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'border', _1: '1px solid #989796'},
						_1: {ctor: '[]'}
					}
				}
			}
		}
	});
var _user$project$Main$chatBoxStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'height', _1: '500px'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'width', _1: '100%'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'border-radius', _1: '5px'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'background-color', _1: '#e2cbae'},
					_1: {ctor: '[]'}
				}
			}
		}
	});
var _user$project$Main$displayChatMessage = function (message) {
	var _p0 = message;
	var username = _p0._0;
	var input = _p0._1;
	return A2(
		_elm_lang$core$Basics_ops['++'],
		username,
		A2(
			_elm_lang$core$Basics_ops['++'],
			': ',
			A2(_elm_lang$core$Basics_ops['++'], input, '\n')));
};
var _user$project$Main$chatBox = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _user$project$Main$chatBoxStyle,
			_1: {ctor: '[]'}
		},
		function () {
			var stringified = A2(_elm_lang$core$List$map, _user$project$Main$displayChatMessage, model.chatlog);
			var foldHtml = F2(
				function (next, html) {
					return {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(next),
								_1: {ctor: '[]'}
							}),
						_1: html
					};
				});
			return A3(
				_elm_lang$core$List$foldl,
				foldHtml,
				{ctor: '[]'},
				stringified);
		}());
};
var _user$project$Main$wssEndpoint = 'ws://localhost:3000';
var _user$project$Main$Model = F3(
	function (a, b, c) {
		return {members: a, chatlog: b, user: c};
	});
var _user$project$Main$init = {
	ctor: '_Tuple2',
	_0: A3(
		_user$project$Main$Model,
		{
			ctor: '::',
			_0: 'asdf',
			_1: {ctor: '[]'}
		},
		{ctor: '[]'},
		{username: 'asdf', currentInput: ''}),
	_1: _elm_lang$core$Platform_Cmd$none
};
var _user$project$Main$Message = F2(
	function (a, b) {
		return {ctor: 'Message', _0: a, _1: b};
	});
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p1 = msg;
		switch (_p1.ctor) {
			case 'NewUser':
				return {
					ctor: '_Tuple2',
					_0: A3(
						_user$project$Main$Model,
						{ctor: '::', _0: _p1._0, _1: model.members},
						model.chatlog,
						model.user),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'NewMessage':
				var _p2 = _p1._0._1;
				return {
					ctor: '_Tuple2',
					_0: A3(
						_user$project$Main$Model,
						model.members,
						{
							ctor: '::',
							_0: A2(_user$project$Main$Message, _p1._0._0, _p2),
							_1: model.chatlog
						},
						{username: model.user.username, currentInput: ''}),
					_1: _user$project$Api$sendMessage(_p2)
				};
			case 'UserInput':
				return {
					ctor: '_Tuple2',
					_0: A3(
						_user$project$Main$Model,
						model.members,
						model.chatlog,
						{username: model.user.username, currentInput: _p1._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			default:
				return {
					ctor: '_Tuple2',
					_0: A3(
						_user$project$Main$Model,
						model.members,
						{
							ctor: '::',
							_0: A2(_user$project$Main$Message, 'ayy', _p1._0),
							_1: model.chatlog
						},
						model.user),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _user$project$Main$WebsocketResponse = function (a) {
	return {ctor: 'WebsocketResponse', _0: a};
};
var _user$project$Main$subscriptions = function (model) {
	return _user$project$Api$subscribeApi(_user$project$Main$WebsocketResponse);
};
var _user$project$Main$UserInput = function (a) {
	return {ctor: 'UserInput', _0: a};
};
var _user$project$Main$chatInput = function (model) {
	return A2(
		_elm_lang$html$Html$textarea,
		{
			ctor: '::',
			_0: _user$project$Main$chatInputStyle,
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$value(model.user.currentInput),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onInput(
						function (input) {
							return _user$project$Main$UserInput(input);
						}),
					_1: {ctor: '[]'}
				}
			}
		},
		{ctor: '[]'});
};
var _user$project$Main$NewMessage = function (a) {
	return {ctor: 'NewMessage', _0: a};
};
var _user$project$Main$onClickSend = function (model) {
	return _user$project$Main$NewMessage(
		A2(_user$project$Main$Message, model.user.username, model.user.currentInput));
};
var _user$project$Main$NewUser = function (a) {
	return {ctor: 'NewUser', _0: a};
};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$button,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onClick(
						_user$project$Main$NewUser('asdf')),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('new user'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(
							_elm_lang$core$Basics$toString(model.members)),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: _user$project$Main$chatBox(model),
					_1: {
						ctor: '::',
						_0: _user$project$Main$chatInput(model),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$button,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onClick(
										_user$project$Main$onClickSend(model)),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text('send'),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}
					}
				}
			}
		});
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})();
