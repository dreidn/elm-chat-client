var _user$project$Api$getResponseAction = function (response) {
	var parseAction = A2(
		_elm_lang$core$Json_Decode$decodeString,
		A2(_elm_lang$core$Json_Decode$field, 'action', _elm_lang$core$Json_Decode$string),
		response);
	var _p0 = parseAction;
	if (_p0.ctor === 'Ok') {
		var _p3 = _p0._0;
		var _p1 = _p3;
		switch (_p1) {
			case 'heartbeat':
				return _user$project$Types$Heartbeat('heartbeat');
			case 'newuser':
				return A2(_user$project$Types$ApiNewUser, 'asdf', 0);
			case 'newmessage':
				return A2(_user$project$Types$ApiNewMessage, 'asdf', 'message');
			case 'userleft':
				return A2(_user$project$Types$ApiUserLeft, 'asdf', 0);
			default:
				return function (_p2) {
					return _user$project$Types$ApiError(
						A2(
							F2(
								function (x, y) {
									return A2(_elm_lang$core$Basics_ops['++'], x, y);
								}),
							'Unknown action ',
							_p2));
				}(_p3);
		}
	} else {
		return _user$project$Types$ApiError(_p0._0);
	}
};
var _user$project$Api$wssEndpoint = 'ws://localhost:3000';
var _user$project$Api$subscribeApi = A2(_elm_lang$websocket$WebSocket$listen, _user$project$Api$wssEndpoint, _user$project$Types$WebsocketResponse);
var _user$project$Api$sendMessage = function (data) {
	var msg = A2(
		_elm_lang$core$Basics_ops['++'],
		'{\"action\":\"NewMessage\",\"message\":',
		A2(_elm_lang$core$Basics_ops['++'], data, '}'));
	return A2(_elm_lang$websocket$WebSocket$send, _user$project$Api$wssEndpoint, msg);
};
